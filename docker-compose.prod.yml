version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: valet_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-u2385522_pp_database}
      MYSQL_USER: ${MYSQL_USER:-u2385522_pp_db}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-aF2fN9rV7fbP8mG5}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-aF2fN9rV7fbP8mG5}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init_tariffs_simple.sql:/docker-entrypoint-initdb.d/init_tariffs.sql
    expose:
      - "3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: valet_backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-u2385522_pp_db}:${MYSQL_PASSWORD:-aF2fN9rV7fbP8mG5}@mysql:3306/${MYSQL_DATABASE:-u2385522_pp_database}
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production-2024}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
    volumes:
      - ./backend/uploads:/app/uploads
    expose:
      - "8000"
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: valet_frontend
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: valet_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx2.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./backend/uploads:/usr/share/nginx/uploads:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: 